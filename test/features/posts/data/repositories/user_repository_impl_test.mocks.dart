// Mocks generated by Mockito 5.2.0 from annotations
// in velowesalt/test/features/posts/data/repositories/user_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:velowesalt/core/network/dio_client.dart' as _i2;
import 'package:velowesalt/features/posts/data/datasources/post_remote_data_source.dart'
    as _i7;
import 'package:velowesalt/features/posts/data/datasources/user_remote_data_source.dart'
    as _i5;
import 'package:velowesalt/features/posts/data/models/posts_model.dart' as _i4;
import 'package:velowesalt/features/posts/data/models/users_model.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDioClient_0 extends _i1.Fake implements _i2.DioClient {}

class _FakeUsersModel_1 extends _i1.Fake implements _i3.UsersModel {}

class _FakePostsModel_2 extends _i1.Fake implements _i4.PostsModel {}

/// A class which mocks [UserRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRemoteDataSourceImpl extends _i1.Mock
    implements _i5.UserRemoteDataSourceImpl {
  MockUserRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DioClient get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeDioClient_0()) as _i2.DioClient);
  @override
  _i6.Future<_i3.UsersModel> getUsers() =>
      (super.noSuchMethod(Invocation.method(#getUsers, []),
              returnValue: Future<_i3.UsersModel>.value(_FakeUsersModel_1()))
          as _i6.Future<_i3.UsersModel>);
}

/// A class which mocks [PostRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRemoteDataSourceImpl extends _i1.Mock
    implements _i7.PostRemoteDataSourceImpl {
  MockPostRemoteDataSourceImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.DioClient get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeDioClient_0()) as _i2.DioClient);
  @override
  _i6.Future<_i4.PostsModel> getPosts() =>
      (super.noSuchMethod(Invocation.method(#getPosts, []),
              returnValue: Future<_i4.PostsModel>.value(_FakePostsModel_2()))
          as _i6.Future<_i4.PostsModel>);
}

/// A class which mocks [UserRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MyUserRemoteDataSource extends _i1.Mock
    implements _i5.UserRemoteDataSourceImpl {
  @override
  _i2.DioClient get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeDioClient_0()) as _i2.DioClient);
  @override
  _i6.Future<_i3.UsersModel> getUsers() =>
      (super.noSuchMethod(Invocation.method(#getUsers, []),
              returnValue: Future<_i3.UsersModel>.value(_FakeUsersModel_1()))
          as _i6.Future<_i3.UsersModel>);
}

/// A class which mocks [PostRemoteDataSourceImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MyPostRemoteDataSource extends _i1.Mock
    implements _i7.PostRemoteDataSourceImpl {
  @override
  _i2.DioClient get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeDioClient_0()) as _i2.DioClient);
  @override
  _i6.Future<_i4.PostsModel> getPosts() =>
      (super.noSuchMethod(Invocation.method(#getPosts, []),
              returnValue: Future<_i4.PostsModel>.value(_FakePostsModel_2()))
          as _i6.Future<_i4.PostsModel>);
}
